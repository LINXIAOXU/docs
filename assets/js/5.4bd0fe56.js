(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{194:function(a,t,s){a.exports=s.p+"assets/img/appium.579c49d3.png"},195:function(a,t,s){a.exports=s.p+"assets/img/jdk.4809b091.jpg"},196:function(a,t,s){a.exports=s.p+"assets/img/java-home.60a527cf.png"},197:function(a,t,s){a.exports=s.p+"assets/img/android-sdk.df035845.png"},198:function(a,t,s){a.exports=s.p+"assets/img/jdk-tool.29fd0e64.png"},199:function(a,t,s){a.exports=s.p+"assets/img/uiautomator.44837024.png"},200:function(a,t,s){a.exports=s.p+"assets/img/adapt.c402f9ac.jpeg"},201:function(a,t,s){a.exports=s.p+"assets/img/getDeviceName.8de4f5d7.jpeg"},202:function(a,t,s){a.exports=s.p+"assets/img/getAppPackage.dcba97b9.png"},203:function(a,t,s){a.exports=s.p+"assets/img/getAppActivity.14f084f1.png"},254:function(a,t,s){"use strict";s.r(t);var r=s(6),p=Object(r.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"appium基础"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#appium基础"}},[a._v("#")]),a._v(" Appium基础")]),a._v(" "),r("h2",{attrs:{id:"一-appium简介"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一-appium简介"}},[a._v("#")]),a._v(" 一. Appium简介")]),a._v(" "),r("p",[a._v("Appium 是一个开源工具，用于自动化 iOS 手机、 Android 手机和 Windows 桌面平台上的原生、移动 Web 和混合应用。Appium 支持 iOS 上的 Safari 、Chrome 和 Android 上的内置浏览器。重要的是，Appium 是跨平台的：它允许你用同样的 API 对多平台（iOS、Android、Windows）写测试。做到在 iOS、Android 和 Windows 测试套件之间复用代码。"),r("a",{attrs:{href:"http://appium.io/docs/cn/about-appium/intro/",target:"_blank",rel:"noopener noreferrer"}},[a._v("教程"),r("OutboundLink")],1)]),a._v(" "),r("h2",{attrs:{id:"二-appium架构原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二-appium架构原理"}},[a._v("#")]),a._v(" 二. Appium架构原理")]),a._v(" "),r("p",[a._v("Appium的架构原理如图6-2所示，由客户端（Appium Client）和服务器（AppiumServer）两部分组成，客户端与服务器端通过JSON Wire Protocol进行通信。")]),a._v(" "),r("p",[r("img",{attrs:{src:s(194),alt:"appium原理图"}})]),a._v(" "),r("ol",[r("li",[a._v("Appium服务器：Appium服务器是Appium框架的核心。它是一个基于Node.js实现的HTTP服务器。Appium服务器的主要功能是接受从Appium客户端发起的连接，监听从客户端发送来的命令，将命令发送给bootstrap.jar（iOS手机为bootstrap.js）执行，并将命令的执行结果通过HTTP应答反馈给Appium客户端。")]),a._v(" "),r("li",[a._v("Bootstrap.jar：Bootstrap.jar是在Android手机上运行的一个应用程序，它在手机上扮演TCP服务器的角色。当Appium服务器需要运行命令时，Appium服务器会与Bootstrap. jar建立TCP通信，并把命令发送给Bootstrap.jar; Bootstrap.jar负责运行测试命令。")]),a._v(" "),r("li",[a._v("Appium客户端：它主要是指实现了Appium功能的WebDriver协议的客户端Library，它负责与Appium服务器建立连接，并将测试脚本的指令发送到Appium服务器。现有的客户端Library有多种语言的实现，包括Ruby、Python、Java、JavaScript（Node. js）、Object C、PHP和C#。Appium的测试是在这些Library的基础上进行开发的。")]),a._v(" "),r("li",[a._v("Session：Appium的客户端和服务端之间进行通信都必须在一个Session的上下文中进行。客户端在发起通信的时候首先会发送一个叫作「预期能力（Desired Capabilities）」的JSON对象给服务器。服务器收到该数据后，会创建一个session并将session的ID返回到客户端。之后客户端可以用该session的ID发送后续的命令。")]),a._v(" "),r("li",[a._v("Desired Capabilities：Desired Capabilities是一组设置的键值对的集合，其中键对应设置的名称，而值对应设置的值。Desired Capabilities主要用于通知Appium服务器建立需要的Session，其中一些设置可以在Appium运行过程中改变Appium服务器的运行行为。")]),a._v(" "),r("li",[a._v("Appium Desktop：这有一个 Appium 服务器的图形界面封装可以下载，它适用于任何平台。它打包了 Appium 服务器运行需要的所有东西，所以你不需要为 Node 而烦恼。它们还提供一个 Inspector 使你可以查看应用程序的层级结构。这在写测试时可以派上用场。")])]),a._v(" "),r("p",[a._v("Appium在Android上基于UIAutomator实现了测试的代理程序（Bootstrap.jar），在iOS上基于UIAutomation实现了测试的代理程序（Bootstrap.js）。当测试脚本运行时，每行WebDriver的脚本都将转换成Appium的指令发送给Appium服务器，而Appium服务器将测试指令交给代理程序，将由代理程序负责执行测试。比如脚本上的一个点击操作，在Appium服务器上都是touch指令，当指令发送到Android系统上时，Android系统上的Bootstrap.jar将调用UIAutomator的方法实现点击操作；而当指令发送到iOS系统上时，iOS的Bootstrap.js将调用UIAutomation的方法实现点击操作。由于Appium有了这样的能力，同样的测试脚本可以实现跨平台运行。")]),a._v(" "),r("h2",{attrs:{id:"三-appium环境搭建"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三-appium环境搭建"}},[a._v("#")]),a._v(" 三. Appium环境搭建")]),a._v(" "),r("p",[a._v("安装Appium有两种方式，一种是通过npm安装appium的服务端，一种是通过Appium Desktop，下列是通过Appium Desktop")]),a._v(" "),r("h3",{attrs:{id:"_3-1-mac平台基于python的appium环境搭建"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-mac平台基于python的appium环境搭建"}},[a._v("#")]),a._v(" 3.1 MAC平台基于Python的Appium环境搭建")]),a._v(" "),r("p",[r("strong",[a._v("3.1.1 mac下搭建jdk")])]),a._v(" "),r("ol",[r("li",[a._v("去官网下载并按平时的方法双击dmg文件，根据提示安装完成–"),r("a",{attrs:{href:"https://www.oracle.com/cn/java/technologies/javase-jdk13-downloads.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("oracle 官网下载地址"),r("OutboundLink")],1)])]),a._v(" "),r("p",[r("img",{attrs:{src:s(195),alt:"jdk"}})]),a._v(" "),r("ol",{attrs:{start:"2"}},[r("li",[a._v("设置Java的环境变量")])]),a._v(" "),r("ul",[r("li",[a._v("步骤一：打开mac终端命令行工具，输入 “/usr/libexec/java_home -V” ，查找java安装路径，如下图：")])]),a._v(" "),r("p",[r("img",{attrs:{src:s(196),alt:"config"}})]),a._v(" "),r("ul",[r("li",[a._v("步骤二：复制java安装路径后，然后打开终端输入“ls -an”，查看“.bash_profile”文件是否存在，如果不存在，输入“touch .bash_profile”，如果存在就跳过这一步，直接输入 “open -e .bash_profile” ，在该文件下新增")])]),a._v(" "),r("div",{staticClass:"language-java extra-class"},[r("pre",{pre:!0,attrs:{class:"language-java"}},[r("code",[a._v("export JAVA_HOME"),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Library")]),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Java")]),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("JavaVirtualMachines")]),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("jdk1"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),r("span",{pre:!0,attrs:{class:"token number"}},[a._v("8.0_40")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("jdk"),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Contents")]),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Home")]),a._v("\nexport PATH"),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("$JAVA_HOME"),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("bin"),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("$PATH"),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\nexport CLASSPATH"),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("$JAVA_HOME"),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("lib"),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("tools"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("jar"),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("$JAVA_HOME"),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("lib"),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("dt"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("jar\n")])])]),r("ul",[r("li",[a._v("步骤三：保存文件之后，输入命令 “source ~/.bash_profile” ，让环境变量生效。")]),a._v(" "),r("li",[a._v("步骤四：依次输入命令 “java -version” 和 “javac” 执行，检查 jdk是否安装成功。（不提示command not found 即安装成功）")])]),a._v(" "),r("p",[r("strong",[a._v("3.1.2  mac下搭建android-sdk")])]),a._v(" "),r("ul",[r("li",[a._v("步骤一：去官网下载，下载后解压到某个文件夹下–"),r("a",{attrs:{href:"https://www.androiddevtools.cn/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Android SDK下载地址"),r("OutboundLink")],1)])]),a._v(" "),r("p",[r("img",{attrs:{src:s(197),alt:"jdk"}})]),a._v(" "),r("ul",[r("li",[a._v("步骤二：解压后的文件夹下面找到tools，点击下面的android，打开Android SDK Manager。选择你想要下载的安装包，点击“install”下载安装。")])]),a._v(" "),r("p",[r("img",{attrs:{src:s(198),alt:"config"}})]),a._v(" "),r("ul",[r("li",[a._v("步骤三：复制android jdk安装路径后，然后打开终端输入“ls -an”，查看“.bash_profile”文件是否存在，如果不存在，输入“touch .bash_profile”，如果存在就跳过这一步，直接输入 “open -e .bash_profile” ，在该文件下新增")])]),a._v(" "),r("div",{staticClass:"language-java extra-class"},[r("pre",{pre:!0,attrs:{class:"language-java"}},[r("code",[a._v("export ANDROID_HOME"),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Users")]),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("zhazha"),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Downloads")]),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("android"),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("sdk"),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("macosx\nexport PATH"),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("$PATH"),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("$ANDROID_HOME"),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("tools\nexport PATH"),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("$PATH"),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("$ANDROID_HOME"),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("platform"),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("tools\n")])])]),r("ul",[r("li",[a._v("步骤四：保存文件之后，输入命令 “source ~/.bash_profile” ，让环境变量生效。")]),a._v(" "),r("li",[a._v("步骤五：依次输入命令 “adb” “android -v” “aapt” 执行，检查 jdk是否安装成功。")])]),a._v(" "),r("p",[r("strong",[a._v("3.1.3 mac安装homebrew / nodejs / appium客户端")])]),a._v(" "),r("div",{staticClass:"language-shell extra-class"},[r("pre",{pre:!0,attrs:{class:"language-shell"}},[r("code",[r("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 安装brew")]),a._v("\nruby -e "),r("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),r("span",{pre:!0,attrs:{class:"token variable"}},[r("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),r("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" -fsSL https://raw.github.com/mxcl/homebrew/go"),r("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v('"')]),a._v("\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 安装python3及相关包，这步是安装appium的客户端")]),a._v("\nbrew "),r("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" python3\npip "),r("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" selenium\npip "),r("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" appium-python-client\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 安装nodejs")]),a._v("\nbrew "),r("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" nodejs\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 配置cnpm")]),a._v("\n"),r("span",{pre:!0,attrs:{class:"token function"}},[a._v("npm")]),a._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" -g cnpm --registry"),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("https://registry.npm.taobao.org\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 安装appium（即安装appium的服务端），因为我安装了桌面版所以不安装Appium-Server了")]),a._v("\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# sudo cnpm install appium -g")]),a._v("\n")])])]),r("p",[r("strong",[a._v("3.1.4 mac安装Appium桌面版")])]),a._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/appium/appium-desktop/releases/",target:"_blank",rel:"noopener noreferrer"}},[a._v("appium desktop下载地址"),r("OutboundLink")],1),a._v("下载好Appium-mac-1.15.1.dmg后，直接双击根据提示安装即可。")]),a._v(" "),r("p",[r("strong",[a._v("3.1.5 验证安装")])]),a._v(" "),r("p",[a._v("要验证是否满足Appium的所有依赖关系，可以使用 appium-doctor。使用进行安装"),r("code",[a._v("sudo cnpm install appium-doctor -g")]),a._v("，然后运行 appium-doctor命令，提供--ios或--android标志以验证是否正确设置了所有依赖项。可能有一些依赖要自己安装，可以参考"),r("a",{attrs:{href:"https://www.cnblogs.com/wuduoduo41/archive/2004/01/13/12411197.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("解决appium-doctor依赖问题"),r("OutboundLink")],1),r("a",{attrs:{href:"https://github.com/justadudewhohacks/opencv4nodejs",target:"_blank",rel:"noopener noreferrer"}},[a._v("opencv4nodejs安装"),r("OutboundLink")],1)]),a._v(" "),r("h3",{attrs:{id:"_3-2-windows平台基于python的appium环境搭建"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-windows平台基于python的appium环境搭建"}},[a._v("#")]),a._v(" 3.2 Windows平台基于Python的Appium环境搭建")]),a._v(" "),r("p",[r("a",{attrs:{href:"https://www.cnblogs.com/superhin/p/11454786.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Appium环境搭建"),r("OutboundLink")],1)]),a._v(" "),r("h2",{attrs:{id:"二-连接android系统"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二-连接android系统"}},[a._v("#")]),a._v(" 二. 连接Android系统")]),a._v(" "),r("h3",{attrs:{id:"_2-1-将appium与android进行通信连接"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-将appium与android进行通信连接"}},[a._v("#")]),a._v(" 2.1 将Appium与Android进行通信连接")]),a._v(" "),r("p",[a._v("这段代码比较固定")]),a._v(" "),r("div",{staticClass:"language-python extra-class"},[r("pre",{pre:!0,attrs:{class:"language-python"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("from")]),a._v(" appium "),r("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" webdriver\n\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 设置Android系统信息,变量desired_caps是一个字典，字典的key是代表Appium与Android系统的连接参数，字典的value是Android系统信息。")]),a._v("\ndesired_caps "),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 需要被连接的操作系统，如iOS、Android或FirefoxOS。")]),a._v("\ndesired_caps"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),r("span",{pre:!0,attrs:{class:"token string"}},[a._v("'platformName'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[a._v("'Android'")]),a._v("\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Android系统的当前版本信息，如本机的手机系统为9.0。")]),a._v("\ndesired_caps"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),r("span",{pre:!0,attrs:{class:"token string"}},[a._v("'platformVersion'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[a._v("'9.0'")]),a._v("\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 需要执行自动化的Android应用的包名。")]),a._v("\ndesired_caps"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),r("span",{pre:!0,attrs:{class:"token string"}},[a._v("'appPackage'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[a._v("'com.zhangyun.bravo'")]),a._v("\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Android应用包中启动的Android Activity名称。")]),a._v("\ndesired_caps"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),r("span",{pre:!0,attrs:{class:"token string"}},[a._v("'appActivity'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[a._v("'com.zhangzhongyun.inovel.MainActivity'")]),a._v("\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 每台移动设备或模拟器的设备名，设备名是唯一的。")]),a._v("\ndesired_caps"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),r("span",{pre:!0,attrs:{class:"token string"}},[a._v("'deviceName'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[a._v("'dd7a223e'")]),a._v("\n\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#启动服务器地址，后面跟的是手机信息")]),a._v("\ndirver "),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" webdriver"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("Remote"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[a._v("'http://0.0.0.0:4723/wd/hub'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" desired_caps"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),r("h4",{attrs:{id:"_2-1-1-获取移动设备的设备名的方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-1-获取移动设备的设备名的方法"}},[a._v("#")]),a._v(" 2.1.1 获取移动设备的设备名的方法")]),a._v(" "),r("ol",[r("li",[a._v("打开Android SDK所在的文件夹，找到tools文件夹里的uiautomatorviewer.bat文件并双击运行，该文件启动一个名为UI Automator Viewer的软件。")])]),a._v(" "),r("p",[r("img",{attrs:{src:s(199),alt:"UI Automator Viewer"}})]),a._v(" "),r("ol",{attrs:{start:"2"}},[r("li",[a._v("在Android SDK的文件路径中找到AVD Manager.exe并双击运行，该exe程序可以启动Android模拟器。")]),a._v(" "),r("li",[a._v("将手机连接到计算机，连接之前确保手机已开启USB调试模式，连接成功后，手机界面会出现一个USB调试提示信息，单击“确定”按钮即可。")])]),a._v(" "),r("p",[r("img",{attrs:{src:s(200),alt:"USB调试提示信息"}})]),a._v(" "),r("ol",{attrs:{start:"4"}},[r("li",[a._v("在UI Automator Viewer的软件中，获取设置的设备名")])]),a._v(" "),r("p",[r("img",{attrs:{src:s(201),alt:"获取设备名"}})]),a._v(" "),r("h4",{attrs:{id:"_2-1-2-获取apppackage的方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-2-获取apppackage的方法"}},[a._v("#")]),a._v(" 2.1.2 获取appPackage的方法")]),a._v(" "),r("p",[a._v("参数appPackage同样需要借助工具UI Automator Viewer获取，选中获取设备名的按钮，并且保持手机屏幕常亮，单击“OK”按钮，软件就会自动捕捉手机当前界面的控件信息。单击手机上的某个控件，该控件信息就会显示在右侧。其中参数package的参数值就是参数appPackage的参数值。")]),a._v(" "),r("p",[r("img",{attrs:{src:s(202),alt:"获取appPackage"}})]),a._v(" "),r("h4",{attrs:{id:"_2-1-3-获取appactivity的方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-3-获取appactivity的方法"}},[a._v("#")]),a._v(" 2.1.3 获取appActivity的方法")]),a._v(" "),r("p",[a._v("打开CMD窗口并输入adb shell dumpsys activity activities指令来获取当前设备的程序运行信息。在这些信息中可以找出appActivity的参数值，比如查找bravonovel的AppActivity，com.zhangyun.bravo/com.zhangzhongyun.inovel.MainActivity，斜杠后面的内容com.zhangzhongyun.inovel.MainActivity就是参数appActivity的参数值。")]),a._v(" "),r("p",[r("img",{attrs:{src:s(203),alt:"获取appActivity"}})]),a._v(" "),r("h4",{attrs:{id:"_2-1-4-appium连接移动设备或模拟器的常用参数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-4-appium连接移动设备或模拟器的常用参数"}},[a._v("#")]),a._v(" 2.1.4 Appium连接移动设备或模拟器的常用参数")]),a._v(" "),r("p",[a._v("参考这个文档"),r("a",{attrs:{href:"http://appium.io/docs/cn/writing-running-appium/caps/",target:"_blank",rel:"noopener noreferrer"}},[a._v("文档"),r("OutboundLink")],1)]),a._v(" "),r("p",[a._v("https://www.cnblogs.com/du-hong/p/11003755.html")])])}),[],!1,null,null,null);t.default=p.exports}}]);