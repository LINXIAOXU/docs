(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{253:function(t,s,a){t.exports=a.p+"assets/img/create-repo.f378f3b9.png"},349:function(t,s,a){"use strict";a.r(s);var e=a(6),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"git-相关知识"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-相关知识"}},[t._v("#")]),t._v(" git 相关知识")]),t._v(" "),e("h2",{attrs:{id:"git-本地新建项目提交到远程仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-本地新建项目提交到远程仓库"}},[t._v("#")]),t._v(" git 本地新建项目提交到远程仓库")]),t._v(" "),e("ol",[e("li",[t._v("在git服务器上创建一个仓库，这里使用GitHub创建一个仓库")])]),t._v(" "),e("p",[e("img",{attrs:{src:a(253),alt:"仓库"}})]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[t._v("按照步骤2中的命令执行")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"# test"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" README.md "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# echo表示输出# test到README.md中")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 表示初始化本地已有项目")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" README.md "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将README.md添加到缓存区")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"first commit"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将缓存区的内容提交到本地仓库")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin git@github.com:LINXIAOXU/test.git "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提交到远程分支缓存区")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -u origin master "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提交本地分支到远程分支，第二次提交只需要执行“git push”命令")]),t._v("\n")])])]),e("h2",{attrs:{id:"git-克隆项目"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-克隆项目"}},[t._v("#")]),t._v(" git 克隆项目")]),t._v(" "),e("p",[t._v("前提：在github上配置了本机的SSH keys")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("repository"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用SSH keys 来克隆，如 git clone git@github.com:LINXIAOXU/qa-docs.git")]),t._v("\n")])])]),e("h2",{attrs:{id:"git-分支相关操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-分支相关操作"}},[t._v("#")]),t._v(" git 分支相关操作")]),t._v(" "),e("ol",[e("li",[t._v("新建分支")])]),t._v(" "),e("p",[t._v("分支是为了将修改记录的整体流程分叉保存。分叉后的分支不受其他分支的影响，所以在同一个版本库里可以同时进行多个修改。每个新建的库都自带master分支。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("分支名"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如 git branch lml-git ,表示在本地新建一个名为lml-git的分支")]),t._v("\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[t._v("切换分支")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("分支名"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如 git checkout lml-git ,表示从‘master’分支切换到‘lml-git’分支")]),t._v("\n")])])]),e("ol",{attrs:{start:"3"}},[e("li",[t._v("查看本地分支")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 分支显示出来后，可以输入冒号加上q退出界面")]),t._v("\n")])])]),e("ol",{attrs:{start:"4"}},[e("li",[t._v("删除本地分支")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -D "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("分支名"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如 git branch -D lml-git ,表示删除了本地分支lml-git,注意：删除本地分支必须切换到master删除")]),t._v("\n")])])]),e("h2",{attrs:{id:"提交代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#提交代码"}},[t._v("#")]),t._v(" 提交代码")]),t._v(" "),e("ol",[e("li",[t._v("将当前工作目录文件添加到索引(即将修改添加到缓存区，为提交到本地git服务器做准备)。")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 也可以指定文件名执行该命令，如 git add README.md 代表想要将README.md这个文件添加到缓存区，等待提交")]),t._v("\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[t._v("把对文件的改动提交到本地git服务器。")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -m 参数表示可以直接输入后面的message，message可以简略写这次改动文件的原因或者内容，将缓存区的内容提交到本地仓库")]),t._v("\n")])])]),e("ol",{attrs:{start:"3"}},[e("li",[t._v("把本地git服务器的版本库里新分支的内容全部传送给远程版本库，让远程版本库和本地git服务器的版本库内容一致。")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push --set-upstream origin "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("本地新建分支名"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 因为这里是第一次push本地新分支，所以需指明本地新分支名，下一次再push这个分支，就只需要执行“git push”命令了，将缓存区的内容提交到远程仓库")]),t._v("\n")])])]),e("h2",{attrs:{id:"合并代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#合并代码"}},[t._v("#")]),t._v(" 合并代码")]),t._v(" "),e("p",[t._v("前提：在本地分支修改代码的同时，master分支发生了改动，需要在本地分支合并master分支改动的代码")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge origin/master  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 此命令代表把master分支合并到当前分支")]),t._v("\n")])])]),e("h2",{attrs:{id:"同步远程仓库改动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#同步远程仓库改动"}},[t._v("#")]),t._v(" 同步远程仓库改动")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# pull可以理解为把远程版本库的内容拉过来至本地")]),t._v("\n")])])]),e("h2",{attrs:{id:"删除远程分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除远程分支"}},[t._v("#")]),t._v(" 删除远程分支")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -d origin "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("分支名"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如 git push -d origin lml-git ,表示删除远程仓库的lml-git分支")]),t._v("\n")])])]),e("h2",{attrs:{id:"查看提交状态"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看提交状态"}},[t._v("#")]),t._v(" 查看提交状态")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 可以用来查看仓库的状态，nothing to commit, working tree clean  表示没有未提交的文件")]),t._v("\n")])])]),e("h2",{attrs:{id:"撤回修改的文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#撤回修改的文件"}},[t._v("#")]),t._v(" 撤回修改的文件")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看修改的文件")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 撤回修改的文件")]),t._v("\n")])])]),e("h2",{attrs:{id:"查看本机的git-用户名和邮箱"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看本机的git-用户名和邮箱"}},[t._v("#")]),t._v(" 查看本机的git 用户名和邮箱")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config user.name "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看用户名")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config user.email "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看邮箱")]),t._v("\n")])])]),e("h2",{attrs:{id:"全局修改本机的git-用户名和邮箱"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#全局修改本机的git-用户名和邮箱"}},[t._v("#")]),t._v(" 全局修改本机的git 用户名和邮箱")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.name "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("用户名"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如 git config --global user.name LML ,表示修改用户名为LML")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.email "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("邮箱"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如 git config --global user.name 100*****08@qq.com ,表示修改邮箱为100*****08@qq.com")]),t._v("\n")])])]),e("h2",{attrs:{id:"局部修改本机的git-用户名和邮箱"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#局部修改本机的git-用户名和邮箱"}},[t._v("#")]),t._v(" 局部修改本机的git 用户名和邮箱")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config user.name "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("用户名"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如 git config user.name LML ,表示修改用户名为LML")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config user.email "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("邮箱"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如 git config user.name 100*****08@qq.com ,表示修改邮箱为100*****08@qq.com")]),t._v("\n")])])]),e("h2",{attrs:{id:"git提交代码-忽略上传node-modules文件夹"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git提交代码-忽略上传node-modules文件夹"}},[t._v("#")]),t._v(" git提交代码 忽略上传node_modules文件夹")]),t._v(" "),e("ol",[e("li",[t._v("在项目的根目录底下，新建.gitignore")]),t._v(" "),e("li",[t._v("打开.gitignore，添加node_modules")]),t._v(" "),e("li",[t._v("如果在远程仓库中，已经上传了node_modules，则执行git rm -r -f --cached **/node_modules/ 删除远程仓库的node_modules，然后提交代码即可")])])])}),[],!1,null,null,null);s.default=n.exports}}]);